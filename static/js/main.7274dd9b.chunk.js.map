{"version":3,"sources":["components/Navigation/Navbar.js","components/Prevention/Prevention.js","components/Symptoms/Symptoms.js","components/SearchBar/Searchbar.js","components/Cards/Card.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","id","to","Prevention","Symptoms","Searchbar","state","country","handleChange","e","setState","target","value","toUpperCase","handleSubmit","preventDefault","console","log","onSubmit","this","htmlFor","type","onChange","Component","Card","props","total","App","searchCountry","deaths","critical","new","recovered","active","continent","time","fetch","method","headers","then","response","json","res","cases","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.7274dd9b.chunk.js","sourcesContent":["import React from 'react';\nimport { Link, NavLink } from 'react-router-dom'\n\nimport './Navbar.css'\n\nconst Navbar = () => {\n    return (\n        <div className=\"navigation\">\n            <nav>\n                <div id=\"logo\">\n                    <Link to=\"/\">Corona Tracker</Link>\n                    <small>A realtime Corona virus Website application</small>\n                </div>\n                <ul>\n                    <li><NavLink to=\"/\">Home</NavLink></li>\n                    <li><NavLink to=\"/symptoms\">Symptoms</NavLink></li>\n                    <li><NavLink to=\"/prevention\">Prevention</NavLink></li>\n                </ul>\n            </nav>\n        </div>\n    );\n}\n\nexport default Navbar;","import React from 'react';\nimport './Prevention.css'\n\nconst Prevention = () => {\n    return (\n        <div className=\"prevention\">\n            <div className=\"container\">\n                <h1>Prevention Tips and methods</h1>\n                <h3>Wash your hands often</h3>\n                <p>Wash your hands often with soap and water for at least 20 seconds especially after you have been in a public place, or after blowing your nose, coughing, or sneezing.\n                If soap and water are not readily available, use a hand sanitizer that contains at least 60% alcohol. Cover all surfaces of your hands and rub them together until they feel dry.\nAvoid touching your eyes, nose, and mouth with unwashed hands.</p>\n                <hr />\n                <h3>Avoid close contact</h3>\n                <p>Avoid close contact with people who are sick, even inside your home. If possible, maintain 6 feet between the person who is sick and other household members.\n                Put distance between yourself and other people outside of your home.\n                Remember that some people without symptoms may be able to spread virus.\n                Stay at least 6 feet (about 2 arms’ length) from other people.\nKeeping distance from others is especially important for people who are at higher risk of getting very sick.</p>\n                <hr />\n                <h3>Cover your mouth and nose with a cloth face cover when around others</h3>\n                <p>You could spread COVID-19 to others even if you do not feel sick.\n                Everyone should wear a cloth face cover when they have to go out in public, for example to the grocery store or to pick up other necessities.\n                Cloth face coverings should not be placed on young children under age 2, anyone who has trouble breathing, or is unconscious, incapacitated or otherwise unable to remove the mask without assistance.\n                The cloth face cover is meant to protect other people in case you are infected.\n                Do NOT use a facemask meant for a healthcare worker.\nContinue to keep about 6 feet between yourself and others. The cloth face cover is not a substitute for social distancing.</p>\n                <hr />\n                <h3>Cover coughs and sneezes</h3>\n                <p>\n                    If you are around others and do not have on your cloth face covering, remember to always cover your mouth and nose with a tissue when you cough or sneeze or use the inside of your elbow and do not spit.\n                    Throw used tissues in the trash.\nImmediately wash your hands with soap and water for at least 20 seconds. If soap and water are not readily available, clean your hands with a hand sanitizer that contains at least 60% alcohol.</p>\n                <hr />\n                <h3>Clean and disinfect</h3>\n                <p>Clean AND disinfect frequently touched surfaces daily. This includes tables, doorknobs, light switches, countertops, handles, desks, phones, keyboards, toilets, faucets, and sinks.\n                If surfaces are dirty, clean them. Use detergent or soap and water prior to disinfection.\nThen, use a household disinfectant. Most common EPA-registered household disinfectantsexternal icon will work.</p>\n                <hr />\n                <p>Be alert for symptoms. Watch for fever, cough, shortness of breath, or other symptoms of COVID-19.\n                Especially important if you are running essential errands, going into the office or workplace, and in settings where it may be difficult to keep a physical distance of 6 feet.\n                Take your temperature if symptoms develop.\n                Don’t take your temperature within 30 minutes of exercising or after taking medications that could lower your temperature, like acetaminophen.\nFollow CDC guidance if symptoms develop.</p>\n            </div>\n\n        </div>\n    );\n}\n\nexport default Prevention;","import React from 'react';\nimport './Symptoms.css'\n\nconst Symptoms = () => {\n    return (\n        <div className=\"symptoms\">\n            <div className=\"symp\">\n                <h2>Symptoms</h2>\n                <p>People with COVID-19 have had a wide range of symptoms reported – ranging from mild symptoms to severe illness. Symptoms may appear 2-14 days after exposure to the virus. People with these symptoms may have COVID-19:</p>\n                <ul>\n                    <li>Fever or chills</li>\n                    <li>Cough</li>\n                    <li>Shortness of breathe or difficulty breathing</li>\n                    <li>Fatigue</li>\n                    <li>Muscle of body aches</li>\n                    <li>Headaches</li>\n                    <li>New loss of taste or smell</li>\n                    <li>Sore throat</li>\n                    <li>Congestion or runny nose</li>\n                    <li>Nausera or vomiting</li>\n                    <li>Diarrhea</li>\n                </ul>\n                <p>This list does not include all possible symptoms. CDC will continue to update this list as we learn more about COVID-19.</p>\n            </div>\n            <div className=\"emergency\">\n                <h2>When to Seek Emergency Medical Attention\n            </h2>\n                <p>Look for emergency warning signs* for COVID-19. If someone is showing any of these signs, seek emergency medical care immediately</p>\n                <ul>\n                    <li>Trouble breathing</li>\n                    <li>Persistent pain or pressure in the chest</li>\n                    <li>New confussion</li>\n                    <li>Inability to wake or stay awake</li>\n                    <li>Bluish lips or face</li>\n                </ul>\n                <p>*This list is not all possible symptoms. Please call your medical provider for any other symptoms that are severe or concerning to you.</p>\n            </div>\n        </div>\n    );\n}\n\nexport default Symptoms;","import React, { Component } from 'react';\n\nclass Searchbar extends Component {\n    state = {\n        country: null\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: (e.target.value).toUpperCase()\n        })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault()\n        console.log(this.state);\n\n    }\n    render() {\n        return (\n            <div>\n                <form onSubmit={this.handleSubmit}>\n                    <label htmlFor=\"country\">Enter A Country</label>\n                    <input type=\"text\" id=\"country\" onChange={this.handleChange} />\n                    <button>Search</button>\n                </form>\n            </div>\n        );\n    }\n} \n\nexport default Searchbar;","import React, { Component } from 'react';\n\nclass Card extends Component {\n    state = {\n\n    \n    }\n    render(props) {\n        return (\n            <div className=\"card\">\n                <div className=\"bigcard\">\n                    <h1>Total coronavirus infections in kenya</h1>\n                    <h3>{this.props.total}</h3>\n                    <small>The total amount of people that have been diagnosed with the corona virus in Kenya</small>\n                </div>\n                <div className=\"smallcards\">\n                    <h1>Current Infections</h1>\n                    <small>233</small>\n                    <h3>2,800</h3>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Card;","import React, { Component } from 'react';\nimport Navbar from './components/Navigation/Navbar';\nimport { BrowserRouter, Route } from 'react-router-dom'\nimport Prevention from './components/Prevention/Prevention';\nimport Symptoms from './components/Symptoms/Symptoms';\nimport Searchbar from './components/SearchBar/Searchbar';\nimport Card from './components/Cards/Card';\n\n\n\nclass App extends Component {\n  state = {\n    searchCountry: 'KeNYA',\n    deaths: null,\n    critical: null,\n    new: null,\n    recovered: null,\n    active: null,\n    total: null,\n    continent: null,\n    country: null,\n    time: null\n  }\n\n\n  componentDidMount() {\n    fetch(`https://covid-193.p.rapidapi.com/statistics?country=${this.state.searchCountry}`, {\n      method: \"GET\",\n      headers: {\n        \"x-rapidapi-host\": \"covid-193.p.rapidapi.com\",\n        \"x-rapidapi-key\":\n          \"441614529bmsh8c807c34709f5d2p165d8bjsnc13e4abebbe3\",\n      },\n    })\n      .then((response) => {\n        return response.json();\n      }).then(res => {\n        // console.log(res);\n\n        this.setState({\n          deaths: res.response[0].deaths.total,\n          critical: res.response[0].cases.critical,\n          new: res.response[0].cases.new,\n          recovered: res.response[0].cases.recovered,\n          active: res.response[0].cases.active,\n          total: res.response[0].cases.total,\n          continent: res.response[0].continent,\n          country: res.response[0].country,\n          time: res.response[0].time\n        })\n      })\n  }\n\n  render() {\n\n    return (\n\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Route path='/prevention' component={Prevention} />\n          <Route path='/symptoms' component={Symptoms} />\n          <Searchbar />\n          <h1>This is the homepage</h1>\n          <p>The number of death are {this.state.deaths}</p>\n          <Card total={this.state.total} />\n        </div>\n      </BrowserRouter>\n\n    )\n  }\n\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}